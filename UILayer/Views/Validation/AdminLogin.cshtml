﻿@model UILayer.Models.LoginModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-image: url('../../content/bg-transformed.jpeg');
            margin: 0;
            padding: 0;
            background-color: rgba(0,0,0,0.5);
            background-blend-mode: overlay;
            background-size: cover;
            background-position: right;
            min-height: 100vh;
            background-repeat: no-repeat;
        } 

        .container {
            width: 80%;
            margin: 0 auto;
        }

        h2 {
            color: #fff;
        }

        .form-horizontal {
            margin-top: 20px;
        }

        .text-danger {
            color: #d9534f;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .control-label {
            font-weight: bold;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .btn-default {
            background-color: #4caf50;
            color: #fff;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .btn-default:hover {
                background-color: #45a049;
            }

        .form-horizontal label {
            color: #fff;
        }

        .form-horizontal input {
            background-color: transparent;
            outline: none;
            border: 1px solid #fff;
            color: #fff;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Admin Login</h2>

        @using (Html.BeginForm("AdminLogin", "Validation", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Captcha:</label>
                <div class="col-md-8">
                    <img id="captchaImage" src="@Url.Action("GenerateCaptchaImage", "Validation")" alt="Captcha Image" />
                    <img id="refreshCaptchaButton" src="~/Content/Refresh.jpg" alt="Refresh Captcha" onclick="refreshCaptcha()" style="cursor: pointer; width: 20px; height: 20px;" />
                    @Html.TextBox("captchaInput", null, new { @class = "form-control" })
                    @Html.ValidationMessage("captchaInput")
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-default">Login</button>
                </div>
            </div>
        }
        <br /><br />
        @using (Html.BeginForm("AdminResetPassword", "Validation", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-default">Forget Password?</button>
                </div>
            </div>
        }
    </div>
</body>
</html>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
  function refreshCaptcha() {
            // Get the captcha image element
            var captchaImage = document.getElementById('captchaImage');
            // Update the captcha image source to get a new captcha
            captchaImage.src = '@Url.Action("GenerateCaptchaImage", "Validation")?' + new Date().getTime();
            // Clear the previous captcha input value
            document.getElementById('captchaInput').value = '';
        }
    </script>
}
