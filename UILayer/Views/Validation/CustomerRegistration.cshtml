﻿@model UILayer.Models.UserModel

@{
    ViewBag.Title = "CustomerRegistration";
}
<style>
    body {
        font-weight: bold;
        background-image: url('../../content/bg-transformed.jpeg');
        background-color:rgba(0,0,0,0.5);
        background-blend-mode:overlay;
        background-size: cover;
        background-position: right;
        background-repeat: no-repeat;
    }
    .form-horizontal label{
        color:#fff;
    }
    .form-horizontal input{
        background-color:transparent;
        outline:none;
        border : 1px solid #fff;
        color:#fff;
    }

</style>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<div class="container-fluid">
    <h2 class="text-white">New Registration</h2>

</div>
@using (Html.BeginForm("CustomerRegistration", "Validation", FormMethod.Post, new { id = "custRegForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, "Enter First Name :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, "Enter Last Name :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, "Enter Email :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, "Enter Username:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, "Enter Phone Number:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, "Enter Password :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, "Enter to Confirm Password : ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Captcha:</label>
            <div class="col-md-8">
                <img id="captchaImage" src="@Url.Action("GenerateCaptchaImage", "Validation")" alt="Captcha Image" />
                <img id="refreshCaptchaButton" src="~/Content/Refresh.jpg" alt="Refresh Captcha" onclick="refreshCaptcha()" style="cursor: pointer; width: 20px; height: 20px;" />
                @Html.TextBox("captchaInput", null, new { @class = "form-control" })
                @Html.ValidationMessage("captchaInput")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                <input type="button" value="Reset" class="ms-2 btn btn-warning" onclick="resetForm('custRegForm')" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function resetForm(formId) {
            var form = document.getElementById(formId);

            // Reset the form fields
            form.reset();

            // Clear validation messages
            var validationMessages = form.querySelectorAll('[data-valmsg-for]');
            for (var i = 0; i < validationMessages.length; i++) {
                validationMessages[i].innerHTML = ''; // Clear validation messages
                validationMessages[i].style.display = 'none'; // Hide the error message container
            }
    }
    function refreshCaptcha() {
            
            var captchaImage = document.getElementById('captchaImage');

            
            captchaImage.src = '@Url.Action("GenerateCaptchaImage", "Validation")?' + new Date().getTime();


            document.getElementById('captchaInput').value = '';
        }
    </script>
}