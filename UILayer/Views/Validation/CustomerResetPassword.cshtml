@model UILayer.Models.ResetPasswordModel

@{
    ViewBag.Title = "Reset Password";
}
<style>
    body {
        font-weight: bold;
        background-image: url('../../content/bg-transformed.jpeg');
        background-color: rgba(0,0,0,0.5);
        background-blend-mode: overlay;
        background-size: cover;
        height: 100vh;
        background-position: right;
        background-repeat: no-repeat;
    }

    .form-horizontal label {
        color: #fff;
    }

    .form-horizontal input {
        background-color: transparent;
        outline: none;
        border: 1px solid #fff;
        color: #fff;
    }
</style>
<h2 style="margin-left:280px"> Forgot Password</h2>
<div class="container d-flex align-items-center justify-content-center">

    @using (Html.BeginForm("CustomerResetPassword", "Validation", FormMethod.Post, new { @class = "col-md-6" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal mt-1">
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, "Enter Username :", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Password, "Enter New Passowrd:", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-8">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ">
                <div class="col-12">
                    @Html.LabelFor(model => model.ConfirmPassword, "Enter Password Again:", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col">
                    <div class="input-group">
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Captcha:</label>
                <div class="col-md-8">
                    <img id="captchaImage" src="@Url.Action("GenerateCaptchaImage", "Validation")" alt="Captcha Image" />
                    <img id="refreshCaptchaButton" src="~/Content/Refresh.jpg" alt="Refresh Captcha" onclick="refreshCaptcha()" style="cursor: pointer; width: 20px; height: 20px;" />
                    @Html.TextBox("captchaInput", null, new { @class = "form-control" })
                    @Html.ValidationMessage("captchaInput")
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <input type="submit" value="Reset Password" class="btn btn-primary" />
                    <a href="javascript:history.back()"  class="btn btn-outline text-white">Back</a>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}